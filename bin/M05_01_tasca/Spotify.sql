-- MySQL Script generated by MySQL Workbench
-- Thu Oct 28 11:15:05 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Spotify` ;

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spotify` DEFAULT CHARACTER SET utf8 ;
USE `Spotify` ;

-- -----------------------------------------------------
-- Table `Spotify`.`U_free`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`U_free` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`U_free` (
  `id_U_free` INT NOT NULL,
  PRIMARY KEY (`id_U_free`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`TargetaCredit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`TargetaCredit` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`TargetaCredit` (
  `id_TargetaCredit` INT NOT NULL,
  `numero_targeta` INT NULL,
  `mes_caducitat` INT NULL,
  `any_caducitat` INT NULL,
  `codi_seguretat` INT NULL,
  PRIMARY KEY (`id_TargetaCredit`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Paypal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Paypal` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Paypal` (
  `id_Paypal` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  PRIMARY KEY (`id_Paypal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Pagament`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Pagament` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Pagament` (
  `id_Pagament` INT NOT NULL,
  `data` DATE NULL,
  `numero_ordre` INT NULL,
  `total` INT NULL,
  `tipus` VARCHAR(45) NULL COMMENT 'El tipu serà: TargetaCredit o Paypal',
  `TargetaCredit_id_TargetaCredit` INT NOT NULL,
  `Paypal_id_Paypal` INT NOT NULL,
  PRIMARY KEY (`id_Pagament`),
  UNIQUE INDEX `numero_ordre_UNIQUE` (`numero_ordre` ASC) VISIBLE,
  INDEX `fk_Pagament_TargetaCredit1_idx` (`TargetaCredit_id_TargetaCredit` ASC) VISIBLE,
  INDEX `fk_Pagament_Paypal1_idx` (`Paypal_id_Paypal` ASC) VISIBLE,
  CONSTRAINT `fk_Pagament_TargetaCredit1`
    FOREIGN KEY (`TargetaCredit_id_TargetaCredit`)
    REFERENCES `Spotify`.`TargetaCredit` (`id_TargetaCredit`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagament_Paypal1`
    FOREIGN KEY (`Paypal_id_Paypal`)
    REFERENCES `Spotify`.`Paypal` (`id_Paypal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Subscripcio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Subscripcio` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Subscripcio` (
  `id_Subscripcio` INT NOT NULL,
  `data_inici` DATE NULL,
  `data_renovacio` DATE NULL,
  `Pagament_id_Pagament` INT NOT NULL,
  PRIMARY KEY (`id_Subscripcio`),
  UNIQUE INDEX `id_Subscripcio_UNIQUE` (`id_Subscripcio` ASC) VISIBLE,
  INDEX `fk_Subscripcio_Pagament1_idx` (`Pagament_id_Pagament` ASC) VISIBLE,
  CONSTRAINT `fk_Subscripcio_Pagament1`
    FOREIGN KEY (`Pagament_id_Pagament`)
    REFERENCES `Spotify`.`Pagament` (`id_Pagament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`U_premium`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`U_premium` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`U_premium` (
  `id_U_premium` INT NOT NULL,
  `Subscripcio_id_Subscripcio` INT NOT NULL,
  `Pagament_id_Pagament` INT NOT NULL,
  PRIMARY KEY (`id_U_premium`),
  INDEX `fk_U_premium_Subscripcio1_idx` (`Subscripcio_id_Subscripcio` ASC) VISIBLE,
  INDEX `fk_U_premium_Pagament1_idx` (`Pagament_id_Pagament` ASC) VISIBLE,
  CONSTRAINT `fk_U_premium_Subscripcio1`
    FOREIGN KEY (`Subscripcio_id_Subscripcio`)
    REFERENCES `Spotify`.`Subscripcio` (`id_Subscripcio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_U_premium_Pagament1`
    FOREIGN KEY (`Pagament_id_Pagament`)
    REFERENCES `Spotify`.`Pagament` (`id_Pagament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Usuari`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Usuari` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Usuari` (
  `id_Usuari` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `nom` VARCHAR(45) NOT NULL,
  `data_naixement` DATE NULL,
  `sexe` VARCHAR(45) NULL,
  `pais` VARCHAR(45) NULL,
  `cp` INT NULL,
  `U_free_id_U_free` INT NOT NULL,
  `U_premium_id_U_premium` INT NOT NULL,
  PRIMARY KEY (`id_Usuari`),
  UNIQUE INDEX `id_Usuari_UNIQUE` (`id_Usuari` ASC) VISIBLE,
  INDEX `fk_Usuari_U_free_idx` (`U_free_id_U_free` ASC) VISIBLE,
  INDEX `fk_Usuari_U_premium1_idx` (`U_premium_id_U_premium` ASC) VISIBLE,
  CONSTRAINT `fk_Usuari_U_free`
    FOREIGN KEY (`U_free_id_U_free`)
    REFERENCES `Spotify`.`U_free` (`id_U_free`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuari_U_premium1`
    FOREIGN KEY (`U_premium_id_U_premium`)
    REFERENCES `Spotify`.`U_premium` (`id_U_premium`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Estat_playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Estat_playlist` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Estat_playlist` (
  `Estat` VARCHAR(20) NOT NULL,
  `data_eliminacio` DATE NULL,
  PRIMARY KEY (`Estat`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Playlist_activa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Playlist_activa` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Playlist_activa` (
  `id_Playlist_active` INT NOT NULL,
  PRIMARY KEY (`id_Playlist_active`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Playlist_esborrada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Playlist_esborrada` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Playlist_esborrada` (
  `id_Playlist_esborrada` INT NOT NULL,
  PRIMARY KEY (`id_Playlist_esborrada`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Playlist` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Playlist` (
  `id_Playlist` INT NOT NULL,
  `titol` VARCHAR(45) NULL,
  `cançons` INT NULL,
  `data` DATE NULL,
  `Usuari_id_Usuari` INT NOT NULL,
  `Estat_playlist_Estat` VARCHAR(20) NOT NULL,
  `Playlist_active_id_Playlist_active` INT NOT NULL,
  `Playlist_esborrada_id_Playlist_esborrada` INT NOT NULL,
  PRIMARY KEY (`id_Playlist`),
  UNIQUE INDEX `id_Playlist_UNIQUE` (`id_Playlist` ASC) VISIBLE,
  INDEX `fk_Playlist_Usuari1_idx` (`Usuari_id_Usuari` ASC) VISIBLE,
  INDEX `fk_Playlist_Estat_playlist1_idx` (`Estat_playlist_Estat` ASC) VISIBLE,
  INDEX `fk_Playlist_Playlist_active1_idx` (`Playlist_active_id_Playlist_active` ASC) VISIBLE,
  INDEX `fk_Playlist_Playlist_esborrada1_idx` (`Playlist_esborrada_id_Playlist_esborrada` ASC) VISIBLE,
  CONSTRAINT `fk_Playlist_Usuari1`
    FOREIGN KEY (`Usuari_id_Usuari`)
    REFERENCES `Spotify`.`Usuari` (`id_Usuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlist_Estat_playlist1`
    FOREIGN KEY (`Estat_playlist_Estat`)
    REFERENCES `Spotify`.`Estat_playlist` (`Estat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlist_Playlist_active1`
    FOREIGN KEY (`Playlist_active_id_Playlist_active`)
    REFERENCES `Spotify`.`Playlist_activa` (`id_Playlist_active`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Playlist_Playlist_esborrada1`
    FOREIGN KEY (`Playlist_esborrada_id_Playlist_esborrada`)
    REFERENCES `Spotify`.`Playlist_esborrada` (`id_Playlist_esborrada`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Cançó`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Cançó` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Cançó` (
  `id_Cançó` INT NOT NULL,
  `titol` VARCHAR(45) NULL,
  `durada` INT NULL,
  `reproduccions` INT NULL,
  PRIMARY KEY (`id_Cançó`),
  UNIQUE INDEX `id_Cançó_UNIQUE` (`id_Cançó` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Album`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Album` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Album` (
  `id_Album` INT NOT NULL,
  `any_publicació` DATE NOT NULL,
  `portada` BLOB NOT NULL,
  `Cançó_id_Cançó` INT NOT NULL,
  PRIMARY KEY (`id_Album`),
  INDEX `fk_Album_Cançó1_idx` (`Cançó_id_Cançó` ASC) VISIBLE,
  CONSTRAINT `fk_Album_Cançó1`
    FOREIGN KEY (`Cançó_id_Cançó`)
    REFERENCES `Spotify`.`Cançó` (`id_Cançó`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Artista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Artista` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Artista` (
  `id_Artista` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  `imatge` BLOB NULL,
  `Album_id_Album` INT NOT NULL,
  PRIMARY KEY (`id_Artista`),
  UNIQUE INDEX `id_Artista_UNIQUE` (`id_Artista` ASC) VISIBLE,
  INDEX `fk_Artista_Album1_idx` (`Album_id_Album` ASC) VISIBLE,
  CONSTRAINT `fk_Artista_Album1`
    FOREIGN KEY (`Album_id_Album`)
    REFERENCES `Spotify`.`Album` (`id_Album`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Usuari_has_Artista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Usuari_has_Artista` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Usuari_has_Artista` (
  `Usuari_id_Usuari` INT NOT NULL,
  `Artista_id_Artista` INT NOT NULL,
  PRIMARY KEY (`Usuari_id_Usuari`, `Artista_id_Artista`),
  INDEX `fk_Usuari_has_Artista_Artista1_idx` (`Artista_id_Artista` ASC) VISIBLE,
  INDEX `fk_Usuari_has_Artista_Usuari1_idx` (`Usuari_id_Usuari` ASC) VISIBLE,
  CONSTRAINT `fk_Usuari_has_Artista_Usuari1`
    FOREIGN KEY (`Usuari_id_Usuari`)
    REFERENCES `Spotify`.`Usuari` (`id_Usuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuari_has_Artista_Artista1`
    FOREIGN KEY (`Artista_id_Artista`)
    REFERENCES `Spotify`.`Artista` (`id_Artista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Artista_has_Artista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Artista_has_Artista` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Artista_has_Artista` (
  `Artista_id_Artista` INT NOT NULL,
  `Artista_id_Artista1` INT NOT NULL,
  PRIMARY KEY (`Artista_id_Artista`, `Artista_id_Artista1`),
  INDEX `fk_Artista_has_Artista_Artista2_idx` (`Artista_id_Artista1` ASC) VISIBLE,
  INDEX `fk_Artista_has_Artista_Artista1_idx` (`Artista_id_Artista` ASC) VISIBLE,
  CONSTRAINT `fk_Artista_has_Artista_Artista1`
    FOREIGN KEY (`Artista_id_Artista`)
    REFERENCES `Spotify`.`Artista` (`id_Artista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artista_has_Artista_Artista2`
    FOREIGN KEY (`Artista_id_Artista1`)
    REFERENCES `Spotify`.`Artista` (`id_Artista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Usuari_has_Album`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Usuari_has_Album` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Usuari_has_Album` (
  `Usuari_id_Usuari` INT NOT NULL,
  `Album_id_Album` INT NOT NULL,
  PRIMARY KEY (`Usuari_id_Usuari`, `Album_id_Album`),
  INDEX `fk_Usuari_has_Album_Album1_idx` (`Album_id_Album` ASC) VISIBLE,
  INDEX `fk_Usuari_has_Album_Usuari1_idx` (`Usuari_id_Usuari` ASC) VISIBLE,
  CONSTRAINT `fk_Usuari_has_Album_Usuari1`
    FOREIGN KEY (`Usuari_id_Usuari`)
    REFERENCES `Spotify`.`Usuari` (`id_Usuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuari_has_Album_Album1`
    FOREIGN KEY (`Album_id_Album`)
    REFERENCES `Spotify`.`Album` (`id_Album`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`Usuari_has_Cançó`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`Usuari_has_Cançó` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`Usuari_has_Cançó` (
  `Usuari_id_Usuari` INT NOT NULL,
  `Cançó_id_Cançó` INT NOT NULL,
  PRIMARY KEY (`Usuari_id_Usuari`, `Cançó_id_Cançó`),
  INDEX `fk_Usuari_has_Cançó_Cançó1_idx` (`Cançó_id_Cançó` ASC) VISIBLE,
  INDEX `fk_Usuari_has_Cançó_Usuari1_idx` (`Usuari_id_Usuari` ASC) VISIBLE,
  CONSTRAINT `fk_Usuari_has_Cançó_Usuari1`
    FOREIGN KEY (`Usuari_id_Usuari`)
    REFERENCES `Spotify`.`Usuari` (`id_Usuari`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuari_has_Cançó_Cançó1`
    FOREIGN KEY (`Cançó_id_Cançó`)
    REFERENCES `Spotify`.`Cançó` (`id_Cançó`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
